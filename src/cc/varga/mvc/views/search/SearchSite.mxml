<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
     xmlns:mx="library://ns.adobe.com/flex/halo"
     xmlns:mcintosh="com.andymcintosh.controls.*">

	<fx:Script>
		<![CDATA[
      import cmodule.yajl.CLibInit;
      import mx.controls.Alert;
      import spark.events.IndexChangeEvent;
      
      protected function searchHandler(event:MouseEvent):void
      {
        if ((title.text.length != 0) || (artist.text.length != 0)) {
                var searchEvent : SearchSiteEvent = new SearchSiteEvent(SearchSiteEvent.SEARCH_CLICKED);
                var query : Object = {};
                if(title.text != "") {
                  query.title = title.text;
                }
                if(artist.text != "") {
                  query.artist = artist.text;
                }

                searchEvent.search_query = query;
                dispatchEvent(searchEvent);
        }
        else { 
          Alert.show("No Search Term given");
        }
      }

      protected function toggleState(event : IndexChangeEvent) : void {
        this.currentState = ButtonBar(event.target).selectedItem; 
      }

      protected function load_blipfm_clickHandler(event:MouseEvent):void
      {
        var searchEvent : SearchSiteEvent = new SearchSiteEvent(SearchSiteEvent.LOAD_BLIP_FM_FEED);
        searchEvent.blipFM_Nick = nickname.text;
        dispatchEvent(searchEvent);
      }


      protected function pollCollection_clickHandler(event:MouseEvent):void
      {
        var myEvent : SearchSiteEvent = new SearchSiteEvent(SearchSiteEvent.POLL_COLLECTION);

      }

    ]]>
  </fx:Script>
  <fx:Declarations>
    	<s:Transition fromState="search" toState="blipfm" >
    		<s:Fade duration="350" target="{nickname}" />
    	</s:Transition> 
    	<s:Transition fromState="blipfm" toState="search" >
    		<s:Fade duration="350" target="{nickname}" />
    	</s:Transition> 
  </fx:Declarations>
  <s:states>
    <s:State name="search"/>
    <s:State name="blipfm"/>
  </s:states>
  <s:layout><s:VerticalLayout/></s:layout>
  <s:ButtonBar id="modeBar" requireSelection="true" change="toggleState(event)" width="100%">
    <s:dataProvider>
      <s:ArrayList source="{this.states.map(function(x:*, idx:int, arr:Array) : String { return x.name; })}"/>
    </s:dataProvider>
  </s:ButtonBar>
  <s:Group width="60%" height="80" id="container">
    <s:layout><s:HorizontalLayout/></s:layout>
    <mcintosh:AdvancedTextInput id="artist" 
        skinClass="com.andymcintosh.skins.AdvancedTextInputSkin"
             fontSize="24"
             width="250"
             promptText="Artist"
             textAlign="center" 
             includeIn="search" />
    <mcintosh:AdvancedTextInput id="title"  skinClass="com.andymcintosh.skins.AdvancedTextInputSkin" promptText="Title" fontSize="24" width="250" textAlign="center" includeIn="search" />
    <mcintosh:AdvancedTextInput id="nickname" promptText="Nickname" skinClass="com.andymcintosh.skins.AdvancedTextInputSkin" fontSize="28" width="250" textAlign="center" includeIn="blipfm"/>
    <s:Button label.search="Search" 
        fontSize.search="24" fontSize.blipfm="28" click.search="searchHandler(event)" width="150"
        label.blipfm="get blip feed" click.blipfm="load_blipfm_clickHandler(event)"/>
  </s:Group>

</s:Group>
