<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:s="library://ns.adobe.com/flex/spark" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:ai="http://ns.adobe.com/ai/2008" xmlns:d="http://ns.adobe.com/fxg/2008/dt">
 <fx:Script>
        /* Define the skin elements that should not be colorized. 
           For toggle button, the graphics are colorized but the label is not. */
        static private const exclusions:Array = ["labelDisplay"];

       /** 
        * @private
        */     
        override public function get colorizeExclusions():Array {return exclusions;}
    </fx:Script>
  
  <s:states>
    <s:State name="up" />
    <s:State name="over" stateGroups="overStates" />
    <s:State name="down" stateGroups="downStates" />
    <s:State name="disabled" stateGroups="disabledStates" />
    <s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
    <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
    <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
    <s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
  </s:states>
  <fx:Metadata>[HostComponent("spark.components.ToggleButton")]</fx:Metadata>
<!-- layer 1: shadow -->
    <s:Rect left="0" right="0" bottom="-1" height="1">
        <s:fill>
            <s:SolidColor color="0x000000" 
                        color.downStates="0xFFFFFF" 
                        alpha="0.07"
                        alpha.downStates="0.5" />
        </s:fill>
    </s:Rect>
    
    <!-- layer 2: fill -->
    <s:Rect top="1" right="1" left="1" bottom="1">
      <s:fill>
        <s:SolidColor 
          alpha="0.5"
          alpha.overStates="1"
          color="#a0c0ff" 
          color.over="#e0e0ff"/>
      </s:fill>
      <s:stroke>
        <s:SolidColorStroke color="0x0c0d0d"
          caps="none"
          weight="1"
          joints="miter"
          miterLimit="4"/>
      </s:stroke>
    </s:Rect>

    <!-- layer 3: fill lowlight -->
    <s:Rect left="1" right="1" top="1" bottom="1">
      <s:fill>
        <s:LinearGradient rotation="270">
          <s:GradientEntry color="0x000000" ratio="0.0" alpha="0.0627" />
          <s:GradientEntry color="0x000000" ratio="0.48" alpha="0.0099" />
          <s:GradientEntry color="0x000000" ratio="0.48001" alpha="0" />
        </s:LinearGradient>
      </s:fill>
    </s:Rect>

    <!-- layer 4: fill highlight -->
    <s:Rect left="1" right="1" top="1" bottom="1">
      <s:fill>
        <s:LinearGradient rotation="90">
          <s:GradientEntry color="0xFFFFFF"
            ratio="0.0"
            alpha="0.33" 
            alpha.selectedUpStates="0.22"
            alpha.overStates="0.22" 
            alpha.downStates="0.12"/>
          <s:GradientEntry color="0xFFFFFF"
            ratio="0.48"
            alpha="0.33"
            alpha.selectedUpStates="0.22"
            alpha.overStates="0.22" 
            alpha.downStates="0.12"/>
          <s:GradientEntry color="0xFFFFFF"
            ratio="0.48001"
            alpha="0" />
        </s:LinearGradient>
      </s:fill>
    </s:Rect>

    <!-- layer 5: highlight stroke (all states except down) -->
    <s:Rect left="1" right="1" top="1" bottom="1" excludeFrom="downStates">
      <s:stroke>
        <s:LinearGradientStroke rotation="90" weight="1">
          <s:GradientEntry color="0xFFFFFF" alpha.overStates="0.22" alpha.selectedUpStates="0.33" />
          <s:GradientEntry color="0xD8D8D8" alpha.overStates="0.22" alpha.selectedUpStates="0.33" />
        </s:LinearGradientStroke>
      </s:stroke>
    </s:Rect>

    <!-- layer 6: highlight stroke (down state only) -->
    <!--- 
        @private
    -->
    <s:Rect id="hldownstroke1" left="1" right="1" top="1" bottom="1"
      includeIn="downStates, selectedUpStates, overAndSelected">
      <s:stroke>
        <s:LinearGradientStroke rotation="90" weight="1">
          <s:GradientEntry color="0x000000" alpha="0.25" ratio="0.0" />
          <s:GradientEntry color="0x000000" alpha="0.25" ratio="0.001" />
          <s:GradientEntry color="0x000000" alpha="0.07" ratio="0.0011" />
          <s:GradientEntry color="0x000000" alpha="0.07" ratio="0.965" />
          <s:GradientEntry color="0x000000" alpha="0.00" ratio="0.9651" />
        </s:LinearGradientStroke>
      </s:stroke>
    </s:Rect>
    <!--- 
        @private
    -->
    <s:Rect id="hldownstroke2" left="2" right="2" top="2" bottom="2"
      includeIn="downStates, selectedUpStates, overAndSelected">
      <s:stroke>
        <s:LinearGradientStroke rotation="90" weight="1">
          <s:GradientEntry color="0x000000" alpha="0.09" ratio="0.0" />
          <s:GradientEntry color="0x000000" alpha="0.00" ratio="0.0001" />
        </s:LinearGradientStroke>
      </s:stroke>
    </s:Rect>

    <!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
    <s:Rect left="0" right="0" top="0" bottom="0" width="69" height="20">
      <s:stroke>
        <s:LinearGradientStroke rotation="90" weight="1">
          <s:GradientEntry color="0x000000" 
            alpha="0.5625"
            alpha.down="0.6375"
            alpha.selectedStates="0.6375" />
          <s:GradientEntry color="0x000000" 
            alpha="0.75" 
            alpha.down="0.85"
            alpha.selectedStates="0.85" />
        </s:LinearGradientStroke>
      </s:stroke>
    </s:Rect>

    <!-- layer 8: text -->
    <!---  @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
    <s:Label id="labelDisplay"
      textAlign="center"
      verticalAlign="middle"
      maxDisplayedLines="1"
      horizontalCenter="0" verticalCenter="1"
      left="10" right="10" top="2" bottom="2">
    </s:Label>

  </s:SparkSkin>

