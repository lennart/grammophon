<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:mx="library://ns.adobe.com/flex/halo" 
    creationComplete="creationCompleteHandler(event)" 
    applicationComplete="applicationCompleteHandler(event)"
    xmlns:mvc="cc.varga.mvc.*" 
    xmlns:search="cc.varga.mvc.views.search.*" 
    xmlns:views="cc.varga.mvc.views.*" 
    xmlns:player="cc.varga.mvc.views.player.*" 
    xmlns:browser="cc.varga.mvc.views.browser.*" 
    xmlns:result="cc.varga.mvc.views.result.*"
    xmlns:navigation="cc.varga.mvc.views.navigation.*">
  <fx:Library>
  </fx:Library>
  <fx:Style>
      @namespace local "*";
      @namespace mx "library://ns.adobe.com/flex/halo";
      @namespace s "library://ns.adobe.com/flex/spark";

      s|Button {
      skinClass: ClassReference('cc.varga.skins.ButtonSkin');
      }
      s|ButtonBar {
      skinClass: ClassReference('cc.varga.skins.ButtonBar');
      }
  </fx:Style>
  <fx:Script>
    <![CDATA[
      import mx.core.Application;
      import mx.events.FlexEvent;

      protected function creationCompleteHandler(event:FlexEvent):void
      {
      }			

      protected function applicationCompleteHandler(event:FlexEvent):void
      {
//        stage.addEventListener(KeyboardEvent.KEY_UP, dispatchToMediator);
        //stage.displayState = StageDisplayState.FULL_SCREEN;
      }
      
      protected function dispatchToMediator(evt : KeyboardEvent) : void {
  //      dispatchEvent(evt);
      }

      protected function fullscreen(event:MouseEvent):void
      {
        if(stage.displayState == StageDisplayState.FULL_SCREEN) {
          stage.displayState = StageDisplayState.NORMAL;
        }
        else {
          stage.displayState = StageDisplayState.FULL_SCREEN;
        }
      }

    ]]>
  </fx:Script>

  <fx:Declarations>
    <mvc:ApplicationContext contextView="{this}" />
  </fx:Declarations>
  <s:states>
    <s:State name="searchState" />
    <s:State name="resultState" />
    <s:State name="playerState" />
    <s:State name="browserState" />
  </s:states>
  <s:layout>
    <s:BasicLayout/>
  </s:layout>

  <navigation:Navigator left="0" right="0" height="100"
    skinClass="cc.varga.mvc.views.navigation.NavigationSkin" 
    id="navigator"
    label.searchState="Search" 
    label.browserState="Search" 
    label.resultState="Results"
    label.playerState="Playback"/>

  <s:SkinnableContainer 
    skinClass.searchState="cc.varga.mvc.views.search.SearchSkin" left="50" right="50" height.searchState="100" top.playerState="110" top.browserState="110" top.resultState="110" left.searchState="50" bottom.playerState="50" bottom.browserState="50" bottom.resultState="50" right.searchState="50" verticalCenter.searchState="30">
	<s:layout>
      <s:BasicLayout/>
    </s:layout>
    <search:SearchSite width="100%" id="search" includeIn="searchState"/>
    <result:ResultItem width="100%" height="100%" id="results" includeIn="resultState">
      <result:layout>
        <s:BasicLayout/>
      </result:layout>
    </result:ResultItem>
    <browser:Browser id="browser" includeIn="browserState"/>
    <player:Player id="player" includeIn="playerState" />
  </s:SkinnableContainer>
</s:Application>
